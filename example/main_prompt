## 概要
タスク管理アプリケーションは、ユーザーがタスクを作成、表示、編集、削除できるようにします。アプリケーションはStreamlitを使用して実装され、異なるファイルに分割して管理されます。

## 必要な機能

### 1. タスクの作成
ユーザーは新しいタスクを作成できます。タスクにはタイトル、詳細、期日などの情報が含まれます。

### 2. タスクの表示
ユーザーは作成されたタスクの一覧を表示できます。各タスクにはタイトルと期日が表示されます。タスクを選択すると、詳細情報が表示されます。

### 3. タスクの編集
ユーザーは既存のタスクを編集できます。タスクのタイトル、詳細、期日などの情報を変更できます。

### 4. タスクの削除
ユーザーは既存のタスクを削除できます。削除されたタスクは一覧から完全に削除されます。

## ファイルの分割

### 1. main.py
メインの実行ファイルです。Streamlitの設定やユーザーインターフェースの構築を行います。

### 2. task_manager.py
タスクの作成、表示、編集、削除などのタスク管理に関する機能を提供します。このファイルには以下の関数が含まれます。
- `create_task(title, description, deadline)`: 新しいタスクを作成します。
- `get_all_tasks()`: 作成されたすべてのタスクのリストを返します。
- `get_task(task_id)`: 指定されたタスクIDに基づいてタスクの詳細情報を返します。
- `update_task(task_id, title, description, deadline)`: 指定されたタスクIDに基づいてタスクを更新します。
- `delete_task(task_id)`: 指定されたタスクIDに基づいてタスクを削除します。

### 3. utils.py
アプリケーションの機能に使用されるユーティリティ関数を提供します。例えば、日付のフォーマット変

換や入力の検証などが含まれます。

## その他の考慮事項
- タスクは、データベースやファイルに保存する代わりに、リスト内で管理することができます。ただし、アプリケーションを再起動するとリストは初期化されます。
- ユーザーインターフェースのデザインやレイアウトは、必要に応じて改善することができますが、この仕様書では詳細な指示は含まれていません。
- ユーザーの入力は適切に検証され、必要に応じてエラーメッセージが表示されるようにします。